/*
1. 软件测试：在需求正确的前提下， 验证软件的功能是否满足用户的需求
目的： 保证和提高 软件的质量， 给用户交付一个高质量高可用度的一个软件

2. 软件测试和研发的区别：
	1.测试和调试
		测试是测试人员确保程序做了他应该做的事情，
		调试是程序开发人员确保程序做了他想要程序实现的功能
	2.与研发薪资
3. 集成
	1、在 linux 服务器上部署系统
	2、发布/发版
	3、执行测试脚本/自动化脚本
	4、输出测试报告
	5、email测试报告发送给相关人员・

*/
/*
软件中的需求
	1. 用户需求：简单的
	2. 软件需求：对用户需求的分析，形成比较详细的需求实现文档
	需求：满足用户的期望和规定的合同（标准，规范，流程）所需要的条件和权能，包含用户需求和软件需求

bug说明：
	当前仅当规格说明是存在的并且正确，程序与规格说明之间的不匹配才是错误
	当没有需求规格说明书时， 判断标准以最终用户为准，当程序没有实现其最终用户合理预期的功能需求时，就是软件错误。

	测试用例包含的要素：标题，测试环境（测试设备、测试系统），测试数据，测试步骤，预期结果，重要性

软件生命周期的6个阶段：
	需求分析、计划、设计、编码、测试、运行维护。

	5个模型：
		1. 瀑布模型：每个阶段是独立的，每个阶段只能执行一次，强调早期计划和需求调查（一步错步步错） 测试是产品的最后一道把关 软件测试也是基于瀑布模型去做的
		2. 螺旋模型： 把开发产品分为好几个阶段 每个阶段以原形为基础（都有风险分析） 注重风险分析，资金需求大 （适用于前期比较有风险 庞大 复杂的产品）

		系统需要做 A，B，C，D四个业务模块，两周完成
		3. 增量模型：第一周完成A，B模块，第二周完成C,D模块
		4. 迭代模型：第一周，先完成ABCD四个业务模块的基本功能， 不考虑复杂业务功能，
					第二周，在第一周完成的基础上， 进行功能的细化 完成复杂的业务功能
			两个模型都具有抗风险能力（迭代模型的抗风险能力大于增量模型，因为前者一开始考虑大局）
	敏捷开发（轻量级，轻文档，轻流程，重目标，重产出）：
		一般迭代周期：2-4周
		参与人员： 5-9人
		宣言：
			个体与交互重于过程和工具（及时沟通）
			可用的软件重于完备的文档（文档简洁易懂，高质量可用的软件）
			客户协作重于合同谈判（软件整个开发过程当中 交流都很重要，客户和项目组之间的交流）
			相应变化重于遵循计划（适应需求的变化==》短期小计划，中期大目标，长远大方向）
		1. PO(project owner)：整理用户的需求， 转化为一个个很多user story（一个里面有可能有一个或多个用户的需求）然后形成 product backlog
		2. SM(scrum manager)：项目经理的角色，负责开发人员测试和PO之间的事物（负责各种会议） 保障敏捷流程能够正常进行下去
		3. ST（scrum team）：各种各样的开发组成，只要最终能达到目标就行 给开发和测试人员很大的空间（不限制）
		Sprint：迭代，一个开发周期
		敏捷开发的流程
			1. SM先把用户的需求整理成一个user story形成product backlog，
			2. 然后会有一个发布计划会议，PO会把user story拿出来和大家评审，对user story进行整理排序，PO还会和SM挑选出一些user story
			3. 迭代会议：把本个开发周期要做的user story具体到某个人
			4. 每日站会：大家站在一起讨论昨天做的和今天要做的
			5. 演示会议
			6. 回顾会议：看在
